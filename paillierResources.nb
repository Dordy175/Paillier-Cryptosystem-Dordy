(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     36376,        875]
NotebookOptionsPosition[     34266,        841]
NotebookOutlinePosition[     34666,        857]
CellTagsIndexPosition[     34623,        854]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Paillier",
  IgnoreSpellCheck->True],
 " Cryptosystem\n",
 StyleBox["(*\nDescription: Notebook containing resources for ", "Input"],
 StyleBox["Paillier", "Input",
  IgnoreSpellCheck->True],
 StyleBox[" Cryptosystem (note that GUI file must be run also),\nAuthor: ", 
  "Input"],
 StyleBox["Ladislav", "Input",
  IgnoreSpellCheck->True],
 StyleBox[" ", "Input"],
 StyleBox["Dorot\[IAcute]k", "Input",
  IgnoreSpellCheck->True],
 StyleBox[",\nDate: 7/12/2020\n*)", "Input"]
}], "Title",
 CellChangeTimes->{{3.816325996461248*^9, 3.8163260016124744`*^9}, {
  3.816328043332288*^9, 3.8163280444702444`*^9}, {3.816330147308873*^9, 
  3.8163301545096188`*^9}},ExpressionUUID->"42a250fb-106e-4fa5-85b3-\
2ba0d8d1b482"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", "\t", "KEYGEN", "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8159000673250027`*^9, 3.815900117521485*^9}, {
  3.816330163686082*^9, 3.816330165588994*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"ea3a6ab2-9f5d-4817-b308-126de7cb915a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"KeyGen", "[", "primeSize_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "output", ",", " ", "p", ",", " ", "q", ",", " ", "n", ",", " ", "n2", 
      ",", " ", "lambda", ",", "g", ",", " ", "mikro", ",", " ", "keyInfo", 
      ",", " ", "publicKey", ",", " ", "privateKey"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "set", " ", "random", " ", "primes", " ", "p", " ", "and", " ", "q"}], 
     "  ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", " ", "=", " ", 
      RowBox[{"RandomPrime", "[", 
       RowBox[{"{", 
        RowBox[{"100", ",", " ", 
         RowBox[{"10", "^", "primeSize"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"q", "=", " ", 
      RowBox[{"RandomPrime", "[", 
       RowBox[{"{", 
        RowBox[{"100", ",", " ", 
         RowBox[{"10", "^", "primeSize"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"inconsistency", " ", 
       RowBox[{"check", " ", "--"}], " ", "kontrola", " ", 
       "nesoud\[EHacek]lnosti", " ", "prvo\[CHacek]\[IAcute]sel"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"GcdCheck", "[", "]"}], " ", "\[NotEqual]", " ", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p", " ", "=", " ", 
         RowBox[{"RandomPrime", "[", 
          RowBox[{"{", 
           RowBox[{"100", ",", " ", 
            RowBox[{"10", "^", "primeSize"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"q", "=", " ", 
         RowBox[{"RandomPrime", "[", 
          RowBox[{"{", 
           RowBox[{"100", ",", " ", 
            RowBox[{"10", "^", "primeSize"}]}], "}"}], "]"}]}], ";"}]}], " ", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"set", " ", "n"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"p", "*", "q"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n2", " ", "=", " ", 
      RowBox[{"n", "^", "2"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Count", " ", 
        RowBox[{"CarMichael", "'"}], "s", " ", "function"}], " ", "\[Rule]", 
       " ", "Lambda"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"lambda", " ", "=", " ", 
      RowBox[{"LCM", "[", 
       RowBox[{
        RowBox[{"p", "-", "1"}], ",", 
        RowBox[{"q", "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Pick", " ", "random", " ", "g", " ", "lower", " ", "than", " ", "n2"}],
       " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"GPicker", "[", "n2", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "Check", " ", "if", " ", "modular", " ", "multiplicative", " ", 
        "inverse", " ", "exists"}], ",", " ", 
       RowBox[{
        RowBox[{"if", " ", "yes"}], " ", "\[Rule]", " ", "continue"}], ",", 
       " ", 
       RowBox[{"else", " ", "pick", " ", "new", " ", "G"}]}], "  ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"mikro", " ", "=", " ", 
      RowBox[{"MMIChecker", "[", 
       RowBox[{"g", ",", " ", "lambda", ",", " ", "n", ",", " ", "n2"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"IntegerQ", "[", "mikro", "]"}], " ", "\[Equal]", " ", 
        "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerQ", "[", "mikro", "]"}], " ", "\[Equal]", " ", 
          "False"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"g", " ", "=", " ", 
           RowBox[{"GPicker", "[", "n2", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"mikro", " ", "=", " ", 
           RowBox[{"MMIChecker", "[", 
            RowBox[{"g", ",", " ", "lambda", ",", " ", "n", ",", " ", "n2"}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Public", " ", "Key"}], " ", "=", " ", "n"}], ",", "g"}], 
      "  ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Private", " ", "Key"}], " ", "=", " ", "lamda"}], "  ", 
      "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"keyInfo", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "p", ",", "q", ",", " ", "n", ",", "n2", ",", " ", "lambda", ",", " ", 
        "g", ",", " ", "mikro"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"publicKey", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "g"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"privateKey", " ", "=", " ", 
      RowBox[{"{", "lambda", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"output", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"keyInfo", ",", " ", "publicKey", ",", "privateKey"}], "}"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "output"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.815831144015349*^9, 3.8158311696898813`*^9}, {
   3.815831225985321*^9, 3.8158313234010267`*^9}, 3.815831819321838*^9, {
   3.81633017533397*^9, 3.8163304262133656`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"fbfbd107-912d-4eb6-8c4e-d1211e2f2e8c"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", " ", 
  RowBox[{
   RowBox[{"Greatest", " ", "common", " ", "divisor", " ", "of", " ", 
    RowBox[{"(", 
     RowBox[{"p", "*", "q"}], ")"}], " ", "and", " ", 
    RowBox[{"(", 
     RowBox[{"p", "-", "1"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"q", "-", "1"}], ")"}], "\[IndentingNewLine]", "Must", " ", "be",
     " ", "1"}], ",", " ", 
   RowBox[{
   "if", " ", "not", " ", "then", " ", "primes", " ", "are", " ", "same"}], 
   ",", " ", 
   RowBox[{
    RowBox[{"or", " ", "n"}], "-", "multiples"}]}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8159001288186345`*^9, 3.8159001333865213`*^9}, {
  3.8163304872536736`*^9, 3.8163306024930077`*^9}, {3.816330646333483*^9, 
  3.8163306563805933`*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"90aa47cf-12df-4a37-b189-ef5c94ceceb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GcdCheck", " ", "[", 
   RowBox[{"p_", ",", "q_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"output", ",", " ", "gcdPQ"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"output", ";", "\[IndentingNewLine]", 
     RowBox[{"gcdPQ", " ", "=", 
      RowBox[{"GCD", "[", 
       RowBox[{
        RowBox[{"p", "*", "q"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"p", "-", "1"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"q", "-", "1"}], ")"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"gcdPQ", " ", "\[Equal]", " ", "1"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Jedna", " ", "se", " ", "o", " ", "stejna", " ", "prvocisla"}], ",",
          " ", 
         RowBox[{
          RowBox[{"nebo", " ", "jejich", " ", "n"}], "-", 
          "n\[AAcute]sobky"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"output", " ", "=", " ", "0"}]}], " ", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "output"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{3.816330660309088*^9},
 CellLabel->
  "In[250]:=",ExpressionUUID->"b54be936-7f26-45c0-b7ee-bd09a198d2bc"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"G", " ", "and", " ", "R", " ", "random", " ", "picker"}], ",", 
   " ", 
   RowBox[{
    RowBox[{
    "where", " ", "g", " ", "is", " ", "picked", " ", "from", " ", "n", " ", 
     "and", " ", "r", " ", "from", " ", "n"}], "-", "1"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.815900140257347*^9, 3.815900148537863*^9}, {
  3.81633066817309*^9, 3.81633070147701*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"3d609597-b799-4564-ad2d-25f4d751b974"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GPicker", "[", "n_", "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "g", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"g", ";", "\[IndentingNewLine]", 
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "n"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "g"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RPicker", "[", "n_", "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "r", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"r", ";", "\[IndentingNewLine]", 
     RowBox[{"r", " ", "=", " ", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"n", "-", "1"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "r"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellLabel->
  "In[252]:=",ExpressionUUID->"26a629b4-929e-44d5-8e14-3872c306b23a"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", "\t", 
  RowBox[{"MMI", " ", "-", " ", 
   RowBox[{
   "counts", " ", "value", " ", "for", " ", "modular", " ", "multiplicate", 
    " ", "inverse", " ", "calculation"}]}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8159001549215937`*^9, 3.81590015528961*^9}, {
  3.8163307100773*^9, 3.816330801612508*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"84a8c9e1-eca3-4820-9c96-934a87dde6ed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"MMIChecker", "[", 
    RowBox[{"g_", ",", " ", "lambda_", ",", " ", "n_", ",", " ", "n2_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "output", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"output", ";", "\[IndentingNewLine]", 
      RowBox[{"output", " ", "=", " ", 
       RowBox[{"PowerMod", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               SuperscriptBox["g", "lambda"], ",", 
               RowBox[{"(", 
                RowBox[{"n", "^", "2"}], ")"}]}], " ", "]"}], "-", " ", "1"}],
             "n"], ")"}], ")"}], ",", 
         RowBox[{"-", "1"}], ",", "n"}], " ", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "@", "output"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", "\t", 
   RowBox[{"Defining", " ", "function", " ", "L", 
    RowBox[{"(", "x", ")"}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FunctionL", "[", 
   RowBox[{"x_", ",", "n_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "output", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"output", " ", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", "1"}], ")"}], "/", " ", "n"}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "output"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.815900163812251*^9, 3.8159001688265667`*^9}, {
  3.816330804957596*^9, 3.8163308141569653`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"5ccdb1c3-644e-47cd-8f3d-2fb5e5ffd8ab"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"Encryption", " ", "-", " ", 
    RowBox[{
    "encrypts", " ", "message", " ", "based", " ", "on", " ", "primesize", 
     " ", "and", " ", "keygen"}]}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{
   "outputs", " ", "ciphertext", " ", "and", " ", "information", " ", "for", 
    " ", "GUI"}]}], "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.8159001824737687`*^9, 3.815900185194249*^9}, {
  3.816330817485066*^9, 3.8163308624924517`*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"5432a34b-590e-4ee3-8a69-5f8a7cfd0cff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PaillierEncryption", "[", 
   RowBox[{"message_", ",", " ", "primeSize_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "keySetup", ",", "g", ",", "r", ",", "n", ",", "n2", ",", "ciphertext", 
      ",", " ", "gm", " ", ",", " ", "rn", ",", " ", "gmrn", ",", " ", 
      "output", ",", " ", "helper", ",", " ", "helper2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ciphertext", ";", "\[IndentingNewLine]", 
     RowBox[{"keySetup", " ", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"helper", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"keySetup", " ", "=", " ", 
      RowBox[{"KeyGen", "[", "primeSize", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "  ", "=", 
      RowBox[{"keySetup", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", "  ", "=", " ", 
      RowBox[{"keySetup", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n2", " ", "=", " ", 
      RowBox[{"n", "^", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r", "  ", "=", 
      RowBox[{"RPicker", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"message", "<", "n"}], " ", "&&", 
        RowBox[{"r", " ", "<", "n"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gm", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"g", "^", "message"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rn", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"r", "^", "n"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gmrn", " ", "=", " ", 
         RowBox[{"gm", " ", "*", " ", "rn"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ciphertext", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"gmrn", ",", 
           RowBox[{"(", 
            RowBox[{"n", "^", "2"}], ")"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"helper", " ", "=", " ", 
      RowBox[{"keySetup", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "All"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"helper2", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"ciphertext", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"output", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"helper2", ",", "helper"}], " ", "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "output"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8151296645845337`*^9, 3.815129680968334*^9}, {
  3.815129740937017*^9, 3.8151297487289157`*^9}, {3.815129804649208*^9, 
  3.8151298135366735`*^9}, {3.8151303802668114`*^9, 3.8151304161688995`*^9}, {
  3.8151370118081646`*^9, 3.8151370327123036`*^9}, {3.815831913539509*^9, 
  3.8158319151612015`*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"27eac983-7617-4010-b685-8d4c2f6f5cad"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8163309143922467`*^9, 3.816331052077557*^9}, 
   3.8163311669663267`*^9},
 CellLabel->
  "In[259]:=",ExpressionUUID->"1bbcdcae-a40a-48d0-8799-41c44692dd03"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{"Decryption", " ", "-", " ", 
    RowBox[{
    "for", " ", "speed", " ", "function", " ", "will", " ", "take", " ", 
     "params", " ", "from", " ", "GUI", " ", 
     RowBox[{"(", 
      RowBox[{"they", " ", "are", " ", "already", " ", "counted"}], ")"}]}]}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"returns", " ", "opentext"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.8159001941777687`*^9, 3.8159001972333946`*^9}, {
  3.8163310729497547`*^9, 3.816331159644929*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"3b62bda3-9f90-4f11-922c-2fb7842dd92d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PaillierDecryption", "[", 
   RowBox[{
   "ciphertext_", ",", " ", "lambda_", ",", " ", "n_", ",", " ", "mikro_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"outputDec", ",", "opentext", ",", " ", "inputL"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"outputDec", " ", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"inputL", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"opentext", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"opentext", " ", "=", " ", 
      RowBox[{"Mod", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"FunctionL", "[", 
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"ciphertext", "^", "lambda"}], ",", " ", 
             RowBox[{"n", "^", "2"}]}], "]"}], " ", ",", "n"}], "]"}], "*", 
         " ", "mikro"}], ",", " ", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "opentext"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8151322434085307`*^9, 3.815132328079732*^9}, {
   3.8151323800718384`*^9, 3.815132383959443*^9}, {3.8151324236070824`*^9, 
   3.815132425175915*^9}, {3.815132460687954*^9, 3.8151325066078725`*^9}, {
   3.8151325600001316`*^9, 3.8151325790313487`*^9}, {3.8151326780560274`*^9, 
   3.81513268112779*^9}, {3.8151330619366255`*^9, 3.815133097544381*^9}, {
   3.8151331682802343`*^9, 3.8151331869039946`*^9}, {3.81513322176814*^9, 
   3.8151332555198436`*^9}, {3.8151336125762787`*^9, 
   3.8151336248560524`*^9}, {3.8151336620246363`*^9, 
   3.8151336674232006`*^9}, {3.815133723128251*^9, 3.8151337837515182`*^9}, {
   3.8151338174803324`*^9, 3.815133887711507*^9}, {3.815133969432043*^9, 
   3.815133977104554*^9}, 3.815837038880661*^9, {3.816331145309236*^9, 
   3.81633114858049*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"5673865d-7d98-459d-8196-c21cacb7f3c9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.816331174132168*^9, 3.816331242644972*^9}, 
   3.8163316105820465`*^9},
 CellLabel->
  "In[262]:=",ExpressionUUID->"c13c8799-71fb-4e02-ae55-dd3f35136bfc"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"Addition", " ", "-"}], " ", ">", " ", 
    RowBox[{
    "takes", " ", "two", " ", "messages", " ", "and", " ", "returns", " ", 
     RowBox[{"{", 
      RowBox[{"ciphertexts", ",", " ", 
       RowBox[{"addition", " ", "value"}], ",", " ", 
       RowBox[{"expected", " ", "value"}]}], "}"}]}]}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"keyInfo", " ", "for", " ", "GUI"}], "}"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "Note", " ", 
     RowBox[{"that", ":", " ", 
      RowBox[{"if", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"addition", " ", "value"}], " ", "\[Equal]", " ", 
         RowBox[{"expected", " ", "value"}]}], ")"}]}]}]}], " ", "\[Rule]", 
    " ", 
    RowBox[{"addition", " ", "is", " ", "OK"}]}]}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.815900201913411*^9, 3.815900205161298*^9}, {
  3.816331255445775*^9, 3.8163312714040723`*^9}, {3.8163313555002084`*^9, 
  3.8163313566042566`*^9}, {3.8163314889886246`*^9, 3.816331606276594*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"ec8498ec-212d-4000-8ac5-e8fe5a62fa13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PaillierAddition", "[", 
   RowBox[{"message_", ",", "message2_", ",", " ", "primeSize_"}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "keySetup", ",", "g", ",", "r1", ",", "r2", ",", "n", ",", "n2", ",", 
      "ciphertext", ",", "ciphertext2", ",", " ", "gm", " ", ",", " ", "rn", 
      ",", " ", "gmrn", ",", " ", "output", ",", " ", "helper", ",", " ", 
      "helper2", ",", "addition", ",", "test"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ciphertext", ";", "\[IndentingNewLine]", 
     RowBox[{"keySetup", " ", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"helper", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"keySetup", " ", "=", " ", 
      RowBox[{"KeyGen", "[", "primeSize", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "  ", "=", 
      RowBox[{"keySetup", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", "  ", "=", " ", 
      RowBox[{"keySetup", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n2", " ", "=", " ", 
      RowBox[{"n", "^", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r1", "  ", "=", 
      RowBox[{"RPicker", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r2", "  ", "=", 
      RowBox[{"RPicker", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"message", "<", "n"}], " ", "&&", 
        RowBox[{"r1", " ", "<", "n"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gm", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"g", "^", "message"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rn", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"r1", "^", "n"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gmrn", " ", "=", " ", 
         RowBox[{"gm", " ", "*", " ", "rn"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ciphertext", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"gmrn", ",", 
           RowBox[{"(", 
            RowBox[{"n", "^", "2"}], ")"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"message2", "<", "n"}], " ", "&&", 
        RowBox[{"r2", " ", "<", "n"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gm", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"g", "^", "message2"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rn", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"r2", "^", "n"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gmrn", " ", "=", " ", 
         RowBox[{"gm", " ", "*", " ", "rn"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ciphertext2", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"gmrn", ",", 
           RowBox[{"(", 
            RowBox[{"n", "^", "2"}], ")"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"addition", " ", "=", " ", 
      RowBox[{"PaillierDecryption", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"PowerMod", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ciphertext", "*", "ciphertext2"}], ")"}], ",", "1", ",", 
           "n2"}], "]"}], ")"}], ",", 
        RowBox[{"keySetup", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "5"}], "]"}], "]"}], ",", "n", " ", ",", 
        RowBox[{"keySetup", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"test", " ", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"message", "+", "message2"}], ")"}], ",", " ", "n"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"helper", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
       "ciphertext", ",", "ciphertext2", ",", "addition", ",", "test", ",", 
        " ", 
        RowBox[{"(", 
         RowBox[{"ciphertext", "*", "ciphertext2"}], ")"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"output", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"helper", ",", 
        RowBox[{"keySetup", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All"}], "]"}], "]"}]}], "}"}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "output"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.815832738740754*^9, 3.815832779977064*^9}, {
   3.815833897385109*^9, 3.8158339683214025`*^9}, {3.8158339984738626`*^9, 
   3.8158340125847073`*^9}, 3.815834079393171*^9, {3.815834158305501*^9, 
   3.8158341822494698`*^9}, {3.815834212569372*^9, 3.815834262552271*^9}, 
   3.815834304424797*^9, {3.8158343862171555`*^9, 3.81583439237691*^9}, {
   3.8158344352023106`*^9, 3.8158344365138044`*^9}, {3.815834475968407*^9, 
   3.8158344934736*^9}, {3.8158345564659185`*^9, 3.815834557281737*^9}, {
   3.81583463774505*^9, 3.815834703351011*^9}, {3.815834807129651*^9, 
   3.815834817584239*^9}, {3.8158348570895367`*^9, 3.8158348583531575`*^9}, {
   3.8158351213300734`*^9, 3.8158351316812787`*^9}, {3.8158352204822865`*^9, 
   3.815835226688691*^9}, {3.815835324361313*^9, 3.815835367633274*^9}, 
   3.8159001014803276`*^9, {3.815904702947131*^9, 3.8159047298114023`*^9}, {
   3.816331369518724*^9, 3.816331387380995*^9}, {3.816331420880642*^9, 
   3.8163314843650208`*^9}, 3.8163315465093946`*^9, {3.816331889942335*^9, 
   3.8163318982062626`*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"ba6b174e-6069-49a4-9736-c6b82eff5042"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MULTIPLICATION", " ", "\[Rule]", " ", 
    RowBox[{
    "takes", " ", "two", " ", "messages", " ", "and", " ", "returns", " ", 
     RowBox[{"{", 
      RowBox[{"ciphertexts", ",", " ", 
       RowBox[{"multiplicated", " ", "value"}], ",", " ", 
       RowBox[{"expected", " ", "value"}]}], "}"}]}]}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"keyInfo", " ", "for", " ", "GUI"}], "}"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "Note", " ", 
     RowBox[{"that", ":", " ", 
      RowBox[{"if", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"multiplicated", " ", "value"}], " ", "\[Equal]", " ", 
         RowBox[{"expected", " ", "value"}]}], ")"}]}]}]}], " ", "\[Rule]", 
    " ", 
    RowBox[{"multiplication", " ", "is", " ", "OK"}]}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.815900215722431*^9, 3.8159002183292103`*^9}, {
  3.8163327666137877`*^9, 3.8163328024439497`*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"958381a6-728c-4d1a-a15e-a704090ba646"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PaillierMultiplication", "[", 
   RowBox[{"message_", ",", "message2_", ",", " ", "primeSize_"}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "keySetup", ",", "g", ",", "r1", ",", "r2", ",", "n", ",", "n2", ",", 
      "ciphertext", ",", "ciphertext2", ",", " ", "gm", " ", ",", " ", "rn", 
      ",", " ", "gmrn", ",", " ", "output", ",", " ", "helper", ",", " ", 
      "helper2", ",", "r", ",", "test"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ciphertext", ";", "\[IndentingNewLine]", 
     RowBox[{"keySetup", " ", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"helper", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"keySetup", " ", "=", " ", 
      RowBox[{"KeyGen", "[", "primeSize", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "  ", "=", 
      RowBox[{"keySetup", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", "  ", "=", " ", 
      RowBox[{"keySetup", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n2", " ", "=", " ", 
      RowBox[{"n", "^", "2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r1", "  ", "=", 
      RowBox[{"RPicker", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r2", "  ", "=", 
      RowBox[{"RPicker", "[", "n", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"message", "<", "n"}], " ", "&&", 
        RowBox[{"r1", " ", "<", "n"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gm", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"g", "^", "message"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rn", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"r1", "^", "n"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gmrn", " ", "=", " ", 
         RowBox[{"gm", " ", "*", " ", "rn"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ciphertext", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"gmrn", ",", 
           RowBox[{"(", 
            RowBox[{"n", "^", "2"}], ")"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"message2", "<", "n"}], " ", "&&", 
        RowBox[{"r2", " ", "<", "n"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"gm", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"g", "^", "message2"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"rn", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"r2", "^", "n"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gmrn", " ", "=", " ", 
         RowBox[{"gm", " ", "*", " ", "rn"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ciphertext2", " ", "=", " ", 
         RowBox[{"Mod", "[", 
          RowBox[{"gmrn", ",", 
           RowBox[{"(", 
            RowBox[{"n", "^", "2"}], ")"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"r", " ", "=", " ", 
      RowBox[{"PaillierDecryption", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"PowerMod", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"ciphertext", "^", "message2"}], ")"}], ",", "1", ",", 
           "n2"}], "]"}], ")"}], ",", 
        RowBox[{"keySetup", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "5"}], "]"}], "]"}], ",", "n", " ", ",", 
        RowBox[{"keySetup", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"test", " ", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"message", "*", "message2"}], ")"}], ",", " ", "n"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"helper", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"ciphertext", ",", "ciphertext2", ",", "r", ",", "test", ",", 
        RowBox[{"(", 
         RowBox[{"ciphertext", "^", "message2"}], ")"}]}], " ", "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"output", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"helper", ",", " ", 
        RowBox[{"keySetup", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "All"}], "]"}], "]"}]}], " ", "}"}]}], " ", ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"Return", "@", "output"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.815835410928852*^9, 3.8158354149141674`*^9}, {
   3.815835493929882*^9, 3.8158355003320932`*^9}, {3.8158355727046323`*^9, 
   3.8158355753535213`*^9}, 3.815843086560893*^9, {3.816332814909642*^9, 
   3.816332845191221*^9}, {3.816332927702135*^9, 3.8163329396940713`*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"9a95787d-ba40-4da7-890e-28a520a3d5d2"]
}, Open  ]]
},
WindowSize->{720., 735.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6d77ac9a-3a5e-4b49-b965-e7942e29e315"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 739, 19, 211, "Title",ExpressionUUID->"42a250fb-106e-4fa5-85b3-2ba0d8d1b482"],
Cell[1322, 43, 311, 6, 66, "Input",ExpressionUUID->"ea3a6ab2-9f5d-4817-b308-126de7cb915a"],
Cell[1636, 51, 5764, 138, 760, "Input",ExpressionUUID->"fbfbd107-912d-4eb6-8c4e-d1211e2f2e8c"],
Cell[7403, 191, 866, 21, 85, "Input",ExpressionUUID->"90aa47cf-12df-4a37-b189-ef5c94ceceb0"],
Cell[8272, 214, 1457, 38, 197, "Input",ExpressionUUID->"b54be936-7f26-45c0-b7ee-bd09a198d2bc"],
Cell[9732, 254, 558, 13, 66, "Input",ExpressionUUID->"3d609597-b799-4564-ad2d-25f4d751b974"],
Cell[10293, 269, 1126, 29, 235, "Input",ExpressionUUID->"26a629b4-929e-44d5-8e14-3872c306b23a"],
Cell[11422, 300, 465, 10, 66, "Input",ExpressionUUID->"84a8c9e1-eca3-4820-9c96-934a87dde6ed"],
Cell[11890, 312, 1828, 48, 274, "Input",ExpressionUUID->"5ccdb1c3-644e-47cd-8f3d-2fb5e5ffd8ab"],
Cell[13721, 362, 646, 13, 104, "Input",ExpressionUUID->"5432a34b-590e-4ee3-8a69-5f8a7cfd0cff"],
Cell[14370, 377, 3180, 71, 422, "Input",ExpressionUUID->"27eac983-7617-4010-b685-8d4c2f6f5cad"],
Cell[17553, 450, 205, 4, 28, "Input",ExpressionUUID->"1bbcdcae-a40a-48d0-8799-41c44692dd03"],
Cell[17761, 456, 711, 15, 122, "Input",ExpressionUUID->"3b62bda3-9f90-4f11-922c-2fb7842dd92d"],
Cell[18475, 473, 2025, 42, 179, "Input",ExpressionUUID->"5673865d-7d98-459d-8196-c21cacb7f3c9"],
Cell[20503, 517, 203, 4, 28, "Input",ExpressionUUID->"c13c8799-71fb-4e02-ae55-dd3f35136bfc"],
Cell[20709, 523, 1218, 29, 141, "Input",ExpressionUUID->"ec8498ec-212d-4000-8ac5-e8fe5a62fa13"],
Cell[21930, 554, 6029, 134, 722, "Input",ExpressionUUID->"ba6b174e-6069-49a4-9736-c6b82eff5042"],
Cell[27962, 690, 1118, 27, 122, "Input",ExpressionUUID->"958381a6-728c-4d1a-a15e-a704090ba646"],
Cell[29083, 719, 5167, 119, 666, "Input",ExpressionUUID->"9a95787d-ba40-4da7-890e-28a520a3d5d2"]
}, Open  ]]
}
]
*)

